@inject IAuthenticationService AuthService
@inject NavigationManager NavManager

@*<h3>Log In</h3>*@

@*@if (showAuthenticatioError)
    {
    <div class="alert alert-danger" role="alert">
    <p>@authenticationErrorText</p>
    </div>
    }*@
<EditForm Model="model" OnValidSubmit="ExecuteLogin" class="">
    <div class="form-row">
        <div class="col-auto">
            <label for="email" class="sr-only">Email</label>
            <InputText id="email" class="form-control" @bind-Value="model.Email" placeholder="Email Address" />
        </div>
        <div class="col-auto">
            <label for="password" class="sr-only">Password</label>
            <InputText type="password" id="password" class="form-control" @bind-Value="model.Password" placeholder="Password" />
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-success">Log In</button>
        </div>
        <div class="col-auto">
            <button type="button" class="btn btn-primary" @onclick="RegisterUser">Reister</button>
        </div>
    </div>
    @*    <DataAnnotationsValidator />
        <ValidationSummary />*@
    @*    <div class="form-group row">
        <label for="email" class="col-md-2 col-form-label">Email:</label>
        <div class="col-md-10">
        <InputText id="email" class="form-control" @bind-Value="model.Email" />
        <ValidationMessage For="@(() => model.Email)" />
        </div>
        </div>
        <div class="form-group row">
        <label for="password" class="col-md-2 col-form-label">Password:</label>
        <div class="col-md-10">
        <InputText type="password" id="password" class="form-control" @bind-Value="model.Password" />
        <ValidationMessage For="@(() => model.Password)" />
        </div>
        </div>

        <div class="row">
        <div class="col-md-12 text-right">
        <button type="submit" class="btn btn-success">Log In</button>
        </div>
        </div>*@
    @if (showAuthenticatioError)
    {
        <div class="form-row">
            <div class="text-danger">
                @authenticationErrorText
            </div>
        </div>
    }
</EditForm>

@code {
    private AuthenticationUserModel model = new();
    private bool showAuthenticatioError = false;
    private string authenticationErrorText = "";
    private void RegisterUser()
    {
        NavManager.NavigateTo("/register");
    }
    private async Task ExecuteLogin()
    {
        showAuthenticatioError = false;
        var result = await AuthService.Login(model);
        if (result is not null)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            authenticationErrorText = "there was an error to log in.";
            showAuthenticatioError = true;
        }
    }
}
