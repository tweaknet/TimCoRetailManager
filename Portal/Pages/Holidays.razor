@page "/holidays"
@using Microsoft.Extensions.Configuration
@inject IHolidaysEndpoint HolidaysEndpoint
@inject IConfiguration config
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navManager
@attribute [Authorize(Roles = "Cashier")]

<style>
    .xxx {
        margin: 20px;
    }
</style>

<h3>Urlopy</h3>
<div class="xxx">
    <button class="btn btn-success" @onclick="(() => OpenDetails())">Złóż wniosek o urlop.</button>
    <button class="btn btn-success">Pokaż ostatnie urlopy.</button>
    <button class="btn btn-primary">Pokaż urlopy do zatwierdzenia.</button>
</div>

@if (holidays is null)
{
    <div class="row">
        <p>Nie załadowano jeszcze twoich urlopów. Proszę czekać.</p>
    </div>
    <div class="container-fluid">
        <div class="row">
            @for (var i = 0; i < 7; i++)
            {
                <div class="col-xl-4 col-lg-6 mb-3">
                    <div class="container">
                        <div class="row">
                            <div class="col-12">
                                <a href="">
                                    <img src="https://dummyimage.com/1200x900/000/fff" class="img-fluid" alt="placeholder image" />
                                </a>
                                <p class="my-2 text-justify">
                                    a placeholder coś tam layaut full page.
                                </p>
                                <p class="mb-1">
                                    <strong>Quantity: </strong>0
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <p class="h4 mb-3">Sample item - 0.00pln</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <Virtualize Items="@holidays" Context="h" OverscanCount="10">

    <table class="table">
        <thead>
            <tr>
                <th>id</th>
                <th>idholidaytype</th>
                <th>data</th>
                <th>idUser</th>
                <th>holidaytypeid</th>
            </tr>
        </thead>
        <tbody>
            @foreach (HolidayModel holiday1 in holidays)
            {
                <tr>
                    <td><div @onclick="(() => OpenDetails(holiday1.Id))">@holiday1.Id</div></td>
                    <td><div @onclick="(() => OpenDetails())">@holiday1.IdHolidayType</div></td>
                    <td><div @onclick="(() => OpenDetails())">@holiday1.Data</div></td>
                    <td><div @onclick="(() => OpenDetails())">@holiday1.IdUser</div></td>
                    <td><div @onclick="(() => OpenDetails())">@holiday1.HolidayTypeId</div></td>
                </tr>
            }
        </tbody>
    </table>
    </Virtualize>
    <p>@userName</p>

@*    <div class="container-fluid">
        <div class="row">
            @foreach (HolidayModel holiday in holidays)
            {
                <div class="col-xl-4 col-lg-6 mb-3">
                    <div class="container">
                        <div class="row">
                            <div class="col-12">
                                <a href="/verifyauth">
                                    @if (holiday.HolidayTypeId >= 0)
                                    {
                                        <img src="https://dummyimage.com/200x100/000/fff&text=commingSoon" alt="placeholder image" />
                                    }
                                    else
                                    {
                                        <img src="@($"{api}{holiday.Data}")" class="img-fluid" alt="placeholder image" />
                                    }
                                </a>
                                <p class="my-2 text-justify">
                                    @holiday.Data
                                </p>
                                <p class="mb-1">
                                    <strong>Quantity: </strong>@holiday.HolidayTypeId
                                </p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                <p class="h5 mb-3">@holiday.IdHolidayType - $@holiday.IdUser  - $@holiday.Id</p>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>*@
}

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }
    private bool isAuthenticated = false;
    private string userName;
    private List<HolidayModel> holidays;
    private string api;
    private const string HolidayListName = "holidayList";
    private const string HolidayCacheDate = "holidayCacheDate";
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthState;
        api = config.GetValue<string>("api");
        holidays = await localStorage.GetItemAsync<List<HolidayModel>>(HolidayListName);
        DateTime? cacheDate = await localStorage.GetItemAsync<DateTime?>(HolidayCacheDate);
        double totalMinutes = 0;
        if (cacheDate is not null)
        {
            totalMinutes = DateTime.UtcNow.Subtract((DateTime)cacheDate).TotalMinutes;
        }
        if (holidays is null || cacheDate is null || totalMinutes > 1)
        {
            try
            {
                holidays = await HolidaysEndpoint.GetAll();
                await localStorage.SetItemAsync(HolidayListName, holidays);
                await localStorage.SetItemAsync(HolidayCacheDate, DateTime.UtcNow);
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }
        userName = authState.User.FindFirst(ClaimTypes.NameIdentifier).Value;
    }
    private void OpenDetails(int Id)
    {
        navManager.NavigateTo("/Details/{Id}");
    }
        private void OpenDetails()
    {
        navManager.NavigateTo("/verifyauth");
    }
}
